estudia las siguientes clases que cree

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.jmoordb.core.ui;

import com.jmoordb.core.ui.Tag;

/**
 *
 * @author avbravo
 */
public class Title extends Tag {

    /**
     * Color red, blue
     *
     * @param tagName
     * @param color
     */
    public Title() {

        super("title");

    }

    public Title text(String text) {
        withText(text);
        return this;
    }

  

    public Tag build() {
        return this;
    }

}



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.jmoordb.core.ui;

import com.jmoordb.core.ui.Tag;

/**
 *
 * @author avbravo
 */
public class Link extends Tag {

    /**
     * Color red, blue
     *
     * @param tagName
     * @param color
     */
    public Link() {

        super("meta");

    }

    public Link add(WebComponent webComponent) {
     if (webComponent!= null) {
         withChild(webComponent);
        }

        return this;
    }
  
    
     public Link rel(String rel) {
        withAttribute("rel", rel);
        return this;
    }
     public Link href(String href) {
        withAttribute("href", href);
        return this;
    }
    

     
     
    public Tag build() {
        return this;
    }

}


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.jmoordb.core.ui;

import com.jmoordb.core.ui.Tag;

/**
 *
 * @author avbravo
 */
public class Style extends Tag {

    /**
     * Color red, blue
     *
     * @param tagName
     * @param color
     */
    public Style() {

        super("style");

    }

  public Style text(String text) {
        withText(text);
        return this;
    }
    

     
     
    public Tag build() {
        return this;
    }

}


a√±adi la clase 

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.jmoordb.core.ui;

import com.jmoordb.core.ui.Tag;

/**
 *
 * @author avbravo
 */
public class Select extends Tag {

    /**
     * Color red, blue
     *
     * @param tagName
     * @param color
     */
    public Select() {

        super("select");

    }

   
    public Select id(String id) {
        withAttribute("id", id);
        return this;
    }
    
        public Select name(String name) {
        withAttribute("name", name);
        return this;
    }

    
    public Select classStyle(String labelClass) {
      withClass(labelClass);
        return this;
    }



    public Select required(Boolean required) {
        if (required) {
            withAttribute("required", "true");
        }

        return this;
    }

    
      public Select add(WebComponent webComponent) {
     if (webComponent!= null) {
         withChild(webComponent);
        }

        return this;
    }
    public Tag build() {
        return this;
    }

}



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.jmoordb.core.ui;

import com.jmoordb.core.ui.Tag;

/**
 *
 * @author avbravo
 */
public class Option extends Tag {

    /**
     * Color red, blue
     *
     * @param tagName
     * @param color
     */
    public Option() {

        super("option");

    }

   
    public Option value(String value) {
        withAttribute("value", value);
        return this;
    }
    
      public Option text(String text) {
        withText(text);
        return this;
    }


    public Option disabled(Boolean disabled) {
        if (disabled) {
            withAttribute("disabled", "true");
        }

        return this;
    }
    public Option selected(Boolean selected) {
        if (selected) {
            withAttribute("selected", "true");
        }

        return this;
    }

    
      public Option add(WebComponent webComponent) {
     if (webComponent!= null) {
         withChild(webComponent);
        }

        return this;
    }
    public Tag build() {
        return this;
    }

}

